---
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import MatchHistoryRoot from "@components/MatchHistory/PlayerRootContext";
import Layout from "@layouts/Layout.astro";

const fetch = require("node-fetch");

const { username } = Astro.params;

const anonKey = Deno.env.get("ANON_KEY");
const dbUrl = Deno.env.get("DB_URL");

const sessionLink = "https://api.duelyst2.com/session";
const loginInfo = {
    username: Deno.env.get("DUELYST_USER"),
    password: Deno.env.get("DUELYST_PW"),
};

(async () => {
    console.log("fetching new token");
    try {
        const response = await fetch(sessionLink, {
            method: "POST",
            body: loginInfo,
            headers: { "Content-Type": "application/json" },
        });

        if (response.status === 200) {
            console.log("Success!");
            const newToken = response.json();
            console.log(newToken);
            //Deno.env.set("DUELYST_API", newToken)
        } else {
            console.log("Failed to send POST request. Status code:", response.status);
        }
    } catch (error) {
        console.error("Error in POST request:", error.message);
    }
})();

const token = Deno.env.get("DUELYST_API");
---

<Layout>
    <Header activeNav="history" />
    <main id="main-content">
        <section id="hero">
            <MatchHistoryRoot client:load username={username ?? ""} token={token ?? ""} anonKey={anonKey ?? ""} dbUrl={dbUrl ?? ""} />
        </section>
        <Footer />
    </main>

    <style>
        /* ===== Hero Section ===== */
        #winner {
            color: #36f1d2;
        }

        #loser {
            color: #cc0f4b;
        }
        #hero {
            @apply pt-8 pb-6;
        }

        #matchHistory {
            @apply text-center;
        }
        #hero h1 {
            @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
        }
        #hero .rss-link {
            @apply mb-6;
        }
        #hero .rss-icon {
            @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
        }
        #hero p {
            @apply my-2;
        }
        .social-wrapper {
            @apply mt-4 flex flex-col sm:flex-row sm:items-center;
        }
        .social-links {
            @apply mr-2 mb-1 whitespace-nowrap sm:mb-0;
        }

        /* ===== Featured & Recent Posts Sections ===== */
        #featured,
        #recent-posts {
            @apply pt-12 pb-6;
        }
        #featured h2,
        #recent-posts h2 {
            @apply text-2xl font-semibold tracking-wide;
        }
        .all-posts-btn-wrapper {
            @apply my-8 text-center;
        }
    </style>
</Layout>
