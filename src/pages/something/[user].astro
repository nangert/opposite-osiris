---
import { SITE } from "@config";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import * as postgres from "https://deno.land/x/postgres@v0.14.0/mod.ts";

const { user } = Astro.params;
interface PlayerData {
    username: string;
    rating: number;
    place: number;
}

interface Player {
    username: string;
    user_id: string;
}

interface MatchHistoryItem {
    user_id: string;
    game_id: string;
    game_type: string;
    game_server: string;
    gauntlet_ticket_id: number | null;
    is_scored: boolean;
    is_winner: boolean;
    is_draw: boolean;
    is_player_1: boolean;
    faction_id: number;
    general_id: number;
    faction_xp: number;
    faction_xp_earned: number;
    opponent_id: string;
    opponent_faction_id: number;
    opponent_general_id: number;
    opponent_username: string;
    game_version: string;
    rewards: string | null;
    reward_ids: string | null;
    rank_before: number;
    rank_stars_before: number;
    rank_delta: number;
    rank_stars_delta: number;
    rank_win_streak: number;
    is_daily_win: boolean;
    play_count_reward_progress: number;
    win_count_reward_progress: number;
    has_maxed_play_count_rewards: boolean;
    has_maxed_win_count_rewards: boolean;
    created_at: number;
    updated_at: number;
    ended_at: number;
    status: string;
    gold_tip_amount: number | null;
    rift_ticket_id: null;
    rift_points: null;
    rift_points_earned: null;
    rift_rating_after: null;
    rift_rating_earned: null;
    digest: string;
}

var faction_ids = ["Lyonar", "Songhai", "Vanar", "Abyssian", "Magmar", "Vetruvian"];

const databaseUrl = import.meta.env.SECRET_DATABASEKEY;
const matchHistoryStart = import.meta.env.PUBLIC_MATCH_HISTORY_START;
const matchHistoryEnd = import.meta.env.PUBLIC_MATCH_HISTORY_END;
const token = import.meta.env.SECRET_DUELYST_TOKEN;

const pool = new postgres.Pool(databaseUrl, 3, true);

const connection = await pool.connect();
---

<Layout title={`404 Not Found | ${SITE.title}`}>
    <Header />

    <main id="main-content">
        <div class="not-found-wrapper">
            <h1 aria-label="404 Not Found">404</h1>
            <span aria-hidden="true">¯\_(ツ)_/¯</span>
            <p>{user}</p>
            <LinkButton href="/" className="my-6 underline decoration-dashed underline-offset-8 text-lg">Go back home</LinkButton>
        </div>
    </main>

    <Footer />
</Layout>

<style>
    #main-content {
        @apply mx-auto flex max-w-3xl flex-1 items-center justify-center;
    }
    .not-found-wrapper {
        @apply mb-14 flex flex-col items-center justify-center;
    }
    .not-found-wrapper h1 {
        @apply text-9xl font-bold text-skin-accent;
    }
    .not-found-wrapper p {
        @apply mt-4 text-2xl sm:text-3xl;
    }
</style>
